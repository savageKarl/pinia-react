name: Release and Sync

on:
  push:
    branches:
      - main
      - dev

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true

      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest

      - name: Setup Bun cache
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-

      - name: Install Dependencies
        run: bun install --frozen-lockfile

      - name: Run Lint & Format & Test Check
        run: bun run check && bun run test

      - name: Build
        run: bun run build

      - name: Run release-it
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
        run: |
          if [[ "${{ github.ref }}" == "refs/heads/main" ]]; then
            bun run --filter pinia-react release --ci
          else
            bun run --filter pinia-react release --ci --preRelease=beta
          fi

  sync-back-to-dev:
    runs-on: ubuntu-latest
    needs: release
    if: github.ref == 'refs/heads/main' && needs.release.result == 'success'
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.PAT_FOR_ACTIONS }}
          fetch-depth: 0

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'

      - name: Sync main back to dev
        run: |
          echo "--- 正在同步 main 分支到 dev ---"
          git fetch --all --tags
          echo "--- origin/main 最新日志 ---"
          git log origin/main -n 5 --pretty=oneline
          echo "--- origin/dev 最新日志 ---"
          git log origin/dev -n 5 --pretty=oneline
          echo "2. 正在切换到 dev 分支..."
          git checkout dev
          git pull origin dev
          echo "3. 正在将 dev rebase 到 origin/main..."
          git rebase origin/main
          echo "4. 正在强制推送更新后的 dev 分支..."
          git push origin dev --force
          echo "--- 同步完成 ---"