name: Release
on:
  workflow_dispatch:
    inputs:
      release_type:
        description: 'Release type (beta or stable)'
        required: true
        type: choice
        options:
          - beta
          - stable
jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      issues: write
      pull-requests: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          fetch-tags: true
      - name: Setup Bun
        uses: oven-sh/setup-bun@v1
        with:
          bun-version: latest
      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
      - name: Setup Bun cache
        uses: actions/cache@v4
        with:
          path: ~/.bun/install/cache
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}
          restore-keys: |
            ${{ runner.os }}-bun-
      - name: Install Dependencies
        run: bun install --frozen-lockfile
      - name: Run Lint & Format & Test Check
        run: bun run check && bun run test
      - name: Build
        run: bun run build
      - name: Setup .npmrc for publishing
        run: echo "//registry.npmjs.org/:_authToken=${{ secrets.NPM_TOKEN }}" > ~/.npmrc
      - name: Run release-it
        id: release
        env:
          GITHUB_TOKEN: ${{ secrets.PAT_FOR_ACTIONS }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}
          NPM_TAG: ${{ github.event.inputs.release_type == 'beta' && 'beta' || 'latest' }}
        run: |
          if [[ "${{ github.event.inputs.release_type }}" == "beta" ]]; then
            bun run --filter pinia-react release --ci --preRelease=beta || exit 1
          else
            bun run --filter pinia-react release --ci || exit 1
          fi
          latest_tag=$(git describe --tags --abbrev=0)
          git push origin $latest_tag